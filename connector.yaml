version: "1.0"
specification:
  name: pulsar
  summary: An Apache Pulsar source and destination plugin for Conduit, written in Go.
  description: An Apache Pulsar source and destination plugin for Conduit, written in Go.
  version: (devel)
  author: Meroxa, Inc.
  source:
    parameters:
      - name: topic
        description: The Pulsar topic used by the connector.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: url
        description: The pulsar instance to connect to.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: connectionTimeout
        description: |-
          The duration for which the client will
          attempt to establish a connection before timing out.
        type: duration
        default: ""
        validations: []
      - name: disableLogging
        description: Disables pulsar client logs
        type: bool
        default: ""
        validations: []
      - name: enableTransaction
        description: Determines if the client should support transactions.
        type: bool
        default: ""
        validations: []
      - name: maxConnectionsPerBroker
        description: Limits the number of connections to each broker.
        type: int
        default: ""
        validations: []
      - name: memoryLimitBytes
        description: |-
          Sets the memory limit for the client in bytes.
          If the limit is exceeded, the client may start to block or fail operations.
        type: int
        default: ""
        validations: []
      - name: operationTimeout
        description: |-
          The duration after which an operation is considered
          to have timed out.
        type: duration
        default: ""
        validations: []
      - name: subscriptionName
        description: The name of the subscription to be used for consuming messages.
        type: string
        default: ""
        validations: []
      - name: tlsAllowInsecureConnection
        description: 'Whether the internal Pulsar client accepts untrusted TLS certificate from broker (default: false)'
        type: bool
        default: ""
        validations: []
      - name: tlsCertificateFile
        description: The path to the TLS certificate file
        type: string
        default: ""
        validations: []
      - name: tlsKeyFilePath
        description: The path to the TLS key file
        type: string
        default: ""
        validations: []
      - name: tlsTrustCertsFilePath
        description: The path to the trusted TLS certificate file
        type: string
        default: ""
        validations: []
      - name: tlsValidateHostname
        description: 'Whether the pulsar client verifies the validity of the host name from broker (default: false)'
        type: bool
        default: ""
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is read from the source.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets read from the source.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.schema.context.enabled
        description: |-
          Specifies whether to use a schema context name. If set to false, no schema context name will
          be used, and schemas will be saved with the subject name specified in the connector
          (not safe because of name conflicts).
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.context.name
        description: |-
          Schema context name to be used. Used as a prefix for all schema subject names.
          If empty, defaults to the connector ID.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and encode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.key.subject
        description: |-
          The subject of the key schema. If the record metadata contains the field
          "opencdc.collection" it is prepended to the subject name and separated
          with a dot.
        type: string
        default: key
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and encode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.subject
        description: |-
          The subject of the payload schema. If the record metadata contains the
          field "opencdc.collection" it is prepended to the subject name and
          separated with a dot.
        type: string
        default: payload
        validations: []
      - name: sdk.schema.extract.type
        description: The type of the payload schema.
        type: string
        default: avro
        validations:
          - type: inclusion
            value: avro
  destination:
    parameters:
      - name: topic
        description: The Pulsar topic used by the connector.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: url
        description: The pulsar instance to connect to.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: connectionTimeout
        description: |-
          The duration for which the client will
          attempt to establish a connection before timing out.
        type: duration
        default: ""
        validations: []
      - name: disableLogging
        description: Disables pulsar client logs
        type: bool
        default: ""
        validations: []
      - name: enableTransaction
        description: Determines if the client should support transactions.
        type: bool
        default: ""
        validations: []
      - name: maxConnectionsPerBroker
        description: Limits the number of connections to each broker.
        type: int
        default: ""
        validations: []
      - name: memoryLimitBytes
        description: |-
          Sets the memory limit for the client in bytes.
          If the limit is exceeded, the client may start to block or fail operations.
        type: int
        default: ""
        validations: []
      - name: operationTimeout
        description: |-
          The duration after which an operation is considered
          to have timed out.
        type: duration
        default: ""
        validations: []
      - name: tlsAllowInsecureConnection
        description: 'Whether the internal Pulsar client accepts untrusted TLS certificate from broker (default: false)'
        type: bool
        default: ""
        validations: []
      - name: tlsCertificateFile
        description: The path to the TLS certificate file
        type: string
        default: ""
        validations: []
      - name: tlsKeyFilePath
        description: The path to the TLS key file
        type: string
        default: ""
        validations: []
      - name: tlsTrustCertsFilePath
        description: The path to the trusted TLS certificate file
        type: string
        default: ""
        validations: []
      - name: tlsValidateHostname
        description: 'Whether the pulsar client verifies the validity of the host name from broker (default: false)'
        type: bool
        default: ""
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is written to the destination.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets written to the destination.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.burst
        description: |-
          Allow bursts of at most X records (0 or less means that bursts are not
          limited). Only takes effect if a rate limit per second is set. Note that
          if `sdk.batch.size` is bigger than `sdk.rate.burst`, the effective batch
          size will be equal to `sdk.rate.burst`.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.perSecond
        description: Maximum number of records written per second (0 means no rate limit).
        type: float
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.record.format
        description: |-
          The format of the output record. See the Conduit documentation for a full
          list of supported formats (https://conduit.io/docs/using/connectors/configuration-parameters/output-format).
        type: string
        default: opencdc/json
        validations: []
      - name: sdk.record.format.options
        description: |-
          Options to configure the chosen output record format. Options are normally
          key=value pairs separated with comma (e.g. opt1=val2,opt2=val2), except
          for the `template` record format, where options are a Go template.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and decode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and decode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
